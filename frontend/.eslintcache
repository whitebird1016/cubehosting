[{"E:\\WorkingData\\hosting-website\\frontend\\src\\index.js":"1","E:\\WorkingData\\hosting-website\\frontend\\src\\App.js":"2","E:\\WorkingData\\hosting-website\\frontend\\src\\reportWebVitals.js":"3","E:\\WorkingData\\hosting-website\\frontend\\src\\router\\index.js":"4","E:\\WorkingData\\hosting-website\\frontend\\src\\pages\\contact.js":"5","E:\\WorkingData\\hosting-website\\frontend\\src\\pages\\purchase.js":"6","E:\\WorkingData\\hosting-website\\frontend\\src\\pages\\serverinfo.js":"7","E:\\WorkingData\\hosting-website\\frontend\\src\\pages\\payment.js":"8","E:\\WorkingData\\hosting-website\\frontend\\src\\pages\\profile.js":"9","E:\\WorkingData\\hosting-website\\frontend\\src\\pages\\Auth\\login.js":"10","E:\\WorkingData\\hosting-website\\frontend\\src\\pages\\Auth\\register.js":"11","E:\\WorkingData\\hosting-website\\frontend\\src\\pages\\index.js":"12","E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Layout\\index.js":"13","E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Element\\input.js":"14","E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Element\\textarea.js":"15","E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Element\\button.js":"16","E:\\WorkingData\\hosting-website\\frontend\\src\\utills\\manager.js":"17","E:\\WorkingData\\hosting-website\\frontend\\src\\utills\\getlocation.js":"18","E:\\WorkingData\\hosting-website\\frontend\\src\\utills\\gethash.js":"19","E:\\WorkingData\\hosting-website\\frontend\\src\\action\\action.js":"20","E:\\WorkingData\\hosting-website\\frontend\\src\\assets\\json\\gamedata.js":"21","E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Element\\index.js":"22","E:\\WorkingData\\hosting-website\\frontend\\src\\utills\\index.js":"23","E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Image\\index.js":"24","E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Paypal\\index.js":"25","E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Element\\Card\\backgroundCard.js":"26","E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Element\\Card\\gameCard.js":"27","E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Layout\\header.js":"28","E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Layout\\footer.js":"29","E:\\WorkingData\\hosting-website\\frontend\\src\\assets\\json\\location.js":"30","E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Paypal\\PayButtons.js":"31","E:\\WorkingData\\hosting-website\\frontend\\src\\utills\\generate-string.js":"32","E:\\WorkingData\\hosting-website\\frontend\\src\\config\\index.js":"33","E:\\WorkingData\\hosting-website\\frontend\\src\\action\\code.js":"34","E:\\WorkingData\\hosting-website\\frontend\\src\\assets\\json\\settings.js":"35"},{"size":552,"mtime":1691476926934,"results":"36","hashOfConfig":"37"},{"size":684,"mtime":1691575880224,"results":"38","hashOfConfig":"37"},{"size":375,"mtime":1691476926937,"results":"39","hashOfConfig":"37"},{"size":1065,"mtime":1692164072585,"results":"40","hashOfConfig":"37"},{"size":2322,"mtime":1691476926934,"results":"41","hashOfConfig":"37"},{"size":4932,"mtime":1692034869748,"results":"42","hashOfConfig":"37"},{"size":37734,"mtime":1692728182525,"results":"43","hashOfConfig":"37"},{"size":11791,"mtime":1692042143345,"results":"44","hashOfConfig":"37"},{"size":9296,"mtime":1692892059791,"results":"45","hashOfConfig":"37"},{"size":2933,"mtime":1691476926934,"results":"46","hashOfConfig":"37"},{"size":3959,"mtime":1691476926934,"results":"47","hashOfConfig":"37"},{"size":3773,"mtime":1691574095689,"results":"48","hashOfConfig":"37"},{"size":382,"mtime":1691476926932,"results":"49","hashOfConfig":"37"},{"size":686,"mtime":1691476926931,"results":"50","hashOfConfig":"37"},{"size":471,"mtime":1691476926931,"results":"51","hashOfConfig":"37"},{"size":1154,"mtime":1691476926930,"results":"52","hashOfConfig":"37"},{"size":9838,"mtime":1691476926938,"results":"53","hashOfConfig":"37"},{"size":3400,"mtime":1691476926938,"results":"54","hashOfConfig":"37"},{"size":10530,"mtime":1691476926938,"results":"55","hashOfConfig":"37"},{"size":2022,"mtime":1692035803143,"results":"56","hashOfConfig":"37"},{"size":3932,"mtime":1692723251058,"results":"57","hashOfConfig":"37"},{"size":488,"mtime":1692163566148,"results":"58","hashOfConfig":"37"},{"size":774,"mtime":1691476926938,"results":"59","hashOfConfig":"37"},{"size":728,"mtime":1691476926931,"results":"60","hashOfConfig":"37"},{"size":709,"mtime":1691476926932,"results":"61","hashOfConfig":"37"},{"size":876,"mtime":1691476926930,"results":"62","hashOfConfig":"37"},{"size":1603,"mtime":1691476926930,"results":"63","hashOfConfig":"37"},{"size":4442,"mtime":1692892004813,"results":"64","hashOfConfig":"37"},{"size":346,"mtime":1691476926931,"results":"65","hashOfConfig":"37"},{"size":24622,"mtime":1691476926929,"results":"66","hashOfConfig":"37"},{"size":1830,"mtime":1691476926932,"results":"67","hashOfConfig":"37"},{"size":393,"mtime":1691570058827,"results":"68","hashOfConfig":"37"},{"size":71,"mtime":1691571312227,"results":"69","hashOfConfig":"37"},{"size":2331,"mtime":1692036824019,"results":"70","hashOfConfig":"37"},{"size":8595,"mtime":1692723249147,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"g6yk06",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"E:\\WorkingData\\hosting-website\\frontend\\src\\index.js",[],["152","153"],"E:\\WorkingData\\hosting-website\\frontend\\src\\App.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\reportWebVitals.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\router\\index.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\pages\\contact.js",["154","155"],"import styled from \"styled-components\";\r\nimport { Column, DefaultImage, Row } from \"../components/Element\";\r\nimport Input from \"../components/Element/input\";\r\nimport TextArea from \"../components/Element/textarea\";\r\nimport Button from \"../components/Element/button\";\r\nimport { ARK } from \"../components/Image\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Banner>\r\n        <DefaultImage src={ARK} />\r\n        <BannerContainer>\r\n          <BannerTitle>Server Documentation</BannerTitle>\r\n        </BannerContainer>\r\n      </Banner>\r\n      <LayoutWrapper>\r\n        <ContactWrapper>\r\n          <Title>Email Us</Title>\r\n            <Label>Name</Label>\r\n            <Label>Email</Label>\r\n            <Label>Message</Label>\r\n            <TextArea />\r\n          <ButtonWrapper>\r\n            <Button text=\"Submit\" width=\"250px\" fsize=\"16px\" />\r\n          </ButtonWrapper>\r\n        </ContactWrapper>\r\n      </LayoutWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\nconst Wrapper = styled(Column)`\r\n  gap: 10px;\r\n  width: 100%;\r\n  background-color: #313131;\r\n  height: 100%;\r\n`;\r\nconst Banner = styled(Column)`\r\n  width: 100%;\r\n  position: relative;\r\n  height: 32vh;\r\n  img {\r\n    position: absolute;\r\n    height: 100%;\r\n    mask-image: linear-gradient(#fff, transparent);\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\nconst BannerContainer = styled(Row)`\r\n  height: 100%;\r\n`;\r\nconst BannerTitle = styled.h1`\r\n  font-weight: 600;\r\n  color: #fff;\r\n  text-align: center;\r\n  text-shadow: 2px 2px 1px #191919;\r\n  z-index: 2;\r\n  font-size: 32px;\r\n`;\r\nconst LayoutWrapper = styled(Column)`\r\n  max-width: 1200px;\r\n  width: 100%;\r\n  padding: 10px;\r\n`;\r\nconst ContactWrapper = styled(Column)`\r\n  color: white;\r\n  gap: 10px;\r\n  width: 100%;\r\n\r\n  align-items: flex-start;\r\n  border: 1px solid #323232;\r\n  border-radius: 20px;\r\n  padding: 20px;\r\n  box-shadow: 0 0 18px rgba(0, 0, 0, 0.2);\r\n  background: rgba(36, 36, 36, 0.64);\r\n  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\r\n`;\r\nconst Title = styled.div`\r\n  font-size: 28px;\r\n  font-weight: 600;\r\n`;\r\nconst InputWrapper = styled(Column)`\r\n  gap: 10px;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n`;\r\nconst Label = styled.div`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\nconst ButtonWrapper = styled(Column)`\r\n  margin-top: 20px;\r\n  width: 100%;\r\n`;\r\nexport default Contact;\r\n","E:\\WorkingData\\hosting-website\\frontend\\src\\pages\\purchase.js",["156"],"import styled from \"styled-components\";\r\nimport { Column, DefaultImage, Row } from \"../components/Element\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { Vector } from \"../components/Image\";\r\nimport Button from \"../components/Element/button\";\r\n\r\nconst Purchase = () => {\r\n  const location = useLocation();\r\n  const [selectedData, setSelectedData] = useState(location.state.data);\r\n  const navigate = useNavigate();\r\n  const handleClick = (data, flag) => {\r\n    navigate(\"/payment\", {\r\n      state: {\r\n        data: data,\r\n        flag: flag,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      {selectedData && (\r\n        <Banner>\r\n          <BannerImage src={selectedData.background} />\r\n          <BannerContainer>\r\n            <Card>\r\n              <CardPrice>\r\n                <PriceTitle>{selectedData.price1} </PriceTitle>\r\n                <PriceGeneral> / per month</PriceGeneral>\r\n              </CardPrice>\r\n              <CardTitle>\r\n                <CardTitleHeader>Budget</CardTitleHeader>{\" \"}\r\n              </CardTitle>\r\n              <CardDetail>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>vCore {selectedData.cpu1}</>\r\n                </CardDetailItem>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>Ram {selectedData.ram1}GB</>\r\n                </CardDetailItem>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>SSD {selectedData.ssd1}GB</>\r\n                </CardDetailItem>\r\n              </CardDetail>\r\n              <Button\r\n                text=\"GET STARTED\"\r\n                width=\"100%\"\r\n                radius=\"6px\"\r\n                fweight=\"500\"\r\n                color=\"white\"\r\n                fsize=\"16px\"\r\n                padding=\"15px\"\r\n                onClick={() => handleClick(selectedData, 1)}\r\n              />\r\n            </Card>\r\n            <Card>\r\n              <CardPrice>\r\n                <PriceTitle>{selectedData.price2} </PriceTitle>\r\n                <PriceGeneral> / per month</PriceGeneral>\r\n              </CardPrice>\r\n              <CardTitle>\r\n                <CardTitleHeader>Performance</CardTitleHeader>{\" \"}\r\n              </CardTitle>\r\n              <CardDetail>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>vCore {selectedData.cpu2}</>\r\n                </CardDetailItem>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>Ram {selectedData.ram2}GB</>\r\n                </CardDetailItem>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>SSD {selectedData.ssd2}GB</>\r\n                </CardDetailItem>\r\n              </CardDetail>\r\n              <Button\r\n                text=\"GET STARTED\"\r\n                width=\"100%\"\r\n                radius=\"6px\"\r\n                fweight=\"500\"\r\n                color=\"white\"\r\n                fsize=\"16px\"\r\n                padding=\"15px\"\r\n                onClick={() => handleClick(selectedData, 2)}\r\n              />\r\n            </Card>\r\n          </BannerContainer>\r\n        </Banner>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled(Column)`\r\n  background-color: #313131;\r\n  width: 100%;\r\n  color: white;\r\n  height: 100vh;\r\n  @media screen and (max-width: 640px) {\r\n    height: 100%;\r\n  }\r\n`;\r\nconst Banner = styled(Column)`\r\n  width: 100%;\r\n  position: relative;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n`;\r\nconst BannerImage = styled(DefaultImage)`\r\n  position: absolute;\r\n  height: 100%;\r\n  mask-image: linear-gradient(#fff, transparent);\r\n  width: 100%;\r\n  object-position: top;\r\n  margin-top: 50px;\r\n  object-fit: cover;\r\n`;\r\nconst BannerContainer = styled(Row)`\r\n  height: 100%;\r\n  gap: 40px;\r\n  margin-top: 50px;\r\n  @media screen and (max-width: 640px) {\r\n    flex-direction: column;\r\n    margin-top: 100px;\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Card = styled(Column)`\r\n  padding: 30px 20px;\r\n  gap: 40px;\r\n  background: rgb(30, 30, 30);\r\n  border-radius: 20px;\r\n  width: 300px;\r\n  height: 450px;\r\n  gap: 30px;\r\n  z-index: 1;\r\n  opacity: 0.7;\r\n  font-size: 14px;\r\n  justify-content: center;\r\n`;\r\nconst CardPrice = styled(Row)`\r\n  gap: 10px;\r\n  width: 100%;\r\n`;\r\nconst PriceTitle = styled.div`\r\n  font-weight: 700;\r\n  font-size: 50px;\r\n`;\r\nconst PriceGeneral = styled.div`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n`;\r\nconst CardTitle = styled(Column)`\r\n  gap: 20px;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n`;\r\nconst CardTitleHeader = styled.div`\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n`;\r\nconst CardDetail = styled(Column)`\r\n  gap: 20px;\r\n  width: 100%;\r\n  align-items: flex-start;\r\n`;\r\nconst CardDetailItem = styled(Row)`\r\n  gap: 20px;\r\n`;\r\nexport default Purchase;\r\n","E:\\WorkingData\\hosting-website\\frontend\\src\\pages\\serverinfo.js",["157","158","159","160","161","162","163","164","165"],"import styled from \"styled-components\";\r\nimport { Column, Row } from \"../components/Element\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport CoinbaseCommerceButton from \"react-coinbase-commerce\";\r\nimport { FaCheck } from \"react-icons/fa\";\r\nimport YouTube from \"react-youtube\";\r\nimport {\r\n  currentBlock,\r\n  getAppSpecification,\r\n  getbenchmarks,\r\n  getExpire,\r\n  getFluxAuth,\r\n  getIpaddress,\r\n  handleHardRedeployClick,\r\n  handleRedeployClick,\r\n  handleReinstallClick,\r\n  handleRestartClick,\r\n  handleStartClick,\r\n  handleStopClick,\r\n  handleUpdateServer,\r\n} from \"../utills/manager\";\r\nimport Input from \"../components/Element/input\";\r\nimport { getServiceApi, updateUserService } from \"../action/action\";\r\nimport { toast } from \"react-toastify\";\r\nimport Button from \"../components/Element/button\";\r\nimport Select, { createFilter, StylesConfig } from \"react-select\";\r\nimport {\r\n  continentsOptions,\r\n  countriesOptions,\r\n  regionsOptions,\r\n} from \"../utills/getlocation\";\r\nimport Paypal from \"../components/Paypal\";\r\nimport { gameitems } from \"../assets/json/gamedata\";\r\nimport {\r\n  minecraftVersionOptions,\r\n  arkVersionOptions,\r\n  valheimVersionOptions,\r\n  gamesOptions,\r\n  minecraftMods,\r\n  valheimMods,\r\n  arkMods,\r\n} from \"../assets/json/settings\";\r\nimport { validateCode } from \"../action/code\";\r\nimport { codeUsedApi } from \"../action/code\";\r\n\r\nconst tabs = {\r\n  controls: \"Controls\",\r\n  settings: \"Settings\",\r\n  guides: \"Guides\",\r\n};\r\n\r\nconst selectorStyles = {\r\n  option: (styles) => ({ ...styles, color: \"black\" }),\r\n};\r\n\r\nconst ServerInfo = () => {\r\n  const location = useLocation();\r\n  const [environment, setEnvironment] = useState([]);\r\n  const [servername, setServername] = useState();\r\n  const [ipData, setIpData] = useState();\r\n  const [possibleLocations, setPossibleLocations] = useState();\r\n  const [continent, setContinent] = useState();\r\n  const [country, setCountry] = useState();\r\n  const [region, setRegion] = useState();\r\n  const [geolocationData, setGeolocationData] = useState();\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [timer, setTimer] = useState(null);\r\n  const [flag, setFlag] = useState(0);\r\n  const [clickCheck, setClickCheck] = useState(false);\r\n  const [priceData, setPriceData] = useState();\r\n  const [checkoutdata, setCheckoutData] = useState();\r\n  const [code, setCode] = useState(\"\");\r\n  const [isValidCode, setIsValidCode] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(tabs.controls);\r\n  const [settingsGame, setSettingsGame] = useState(\"minecraft\");\r\n  const [settingsVersionOptions, setSettingsVersionOptions] = useState(\r\n    minecraftVersionOptions\r\n  );\r\n  const [settingsModes, setSettingsModes] = useState(minecraftMods);\r\n  const [settingsPassword, setSettingsPassword] = useState(\"\");\r\n  const [settingsAdmins, setSettingsAdmins] = useState(\"\");\r\n  const [settingsVersion, setSettingsVersion] = useState([]);\r\n  const [settingsAddons, setSettingsAddons] = useState([]);\r\n\r\n  console.log(isButtonDisabled, \"isButtonDisabled\");\r\n  const getIpData = async () => {\r\n    const ipdata = await getIpaddress(location.state.data.name);\r\n    setIpData(ipdata);\r\n  };\r\n  const onPlayerReady = (event) => {\r\n    // access to player in all event handlers via event.target\r\n    event.target.pauseVideo();\r\n  };\r\n  const updateExpireData = async () => {\r\n    if (flag === 1) {\r\n      setClickCheck(false);\r\n      setIsButtonDisabled(true);\r\n      const usdedCode = code;\r\n      const isValidUsedCode = isValidCode;\r\n      const olddata = await getAppSpecification(location.state.data.name);\r\n      console.log(olddata);\r\n      const expire = await getExpire(location.state.data.name);\r\n      console.log(expire, \"expire\");\r\n      const currentBlockData = await currentBlock();\r\n      const authdata = JSON.parse(localStorage.getItem(\"auth\"));\r\n      const data = {\r\n        type: \"fluxappupdate\",\r\n        version: 1,\r\n        appSpecification: {\r\n          version: 6,\r\n          name: olddata.name,\r\n          description: olddata.description,\r\n          owner: olddata.owner,\r\n          compose: [\r\n            {\r\n              name: olddata.compose[0].name,\r\n              description: olddata.compose[0].description,\r\n              repotag: olddata.compose[0].repotag,\r\n              ports: olddata.compose[0].ports,\r\n              domains: olddata.compose[0].domains,\r\n              environmentParameters: olddata.compose[0].environmentParameters,\r\n              commands: [],\r\n              containerPorts: olddata.compose[0].containerPorts,\r\n              containerData: olddata.compose[0].containerData,\r\n              cpu: location.state.data?.components\r\n                ? location.state.data?.components[0].cpu\r\n                : location.state.data?.compose[0].cpu,\r\n              ram: location.state.data?.components\r\n                ? location.state.data?.components[0].ram\r\n                : location.state.data?.compose[0].ram,\r\n              hdd: location.state.data?.components\r\n                ? location.state.data?.components[0].hdd\r\n                : location.state.data?.compose[0].hdd,\r\n              tiered: false,\r\n            },\r\n          ],\r\n          instances: 3,\r\n          contacts: [],\r\n          geolocation: [\"acNA\"],\r\n          expire: expire + 22000,\r\n        },\r\n        timestamp: new Date().getTime(),\r\n      };\r\n      console.log(data, \"updated data\");\r\n\r\n      const transaction = await handleUpdateServer(data);\r\n      toast.success(transaction);\r\n      console.log(transaction, \"transaction\");\r\n      if (transaction) {\r\n        const service = await getServiceApi();\r\n        console.log(service, \"filter\");\r\n        const filterdata = service.serviceData.filter(\r\n          (data) =>\r\n            data.userid === authdata.user._id &&\r\n            data.servername === location.state.data.name\r\n        );\r\n        const serviceData = {\r\n          _id: filterdata[0]._id,\r\n          userid: authdata.user._id,\r\n          name: location.state.data.description,\r\n          currentBlockData: expire + currentBlockData + 22000,\r\n          servername: location.state.data.name,\r\n        };\r\n        await updateUserService(serviceData).then((res) =>\r\n          toast.success(\"Updated\")\r\n        );\r\n        if (isValidUsedCode)\r\n          await codeUsedApi(\r\n            usdedCode,\r\n            location.state.data.name,\r\n            expire + currentBlockData + 22000\r\n          );\r\n        // Start the timer\r\n        const timerId = setTimeout(() => {\r\n          setIsButtonDisabled(false);\r\n        }, 10000);\r\n        setTimer(timerId);\r\n      }\r\n    } else {\r\n      toast.error(\"Please try with payment\");\r\n      setClickCheck(true);\r\n    }\r\n  };\r\n  console.log(location.state.data);\r\n  const updateEnvironmentData = async () => {\r\n    if (!environment || environment.length == 0 || environment == [\"\"]) {\r\n      return toast.error(\"Please input Environment\");\r\n    }\r\n    setIsButtonDisabled(true);\r\n    const olddata = await getAppSpecification(location.state.data.name);\r\n    const expire = await getExpire(location.state.data.name);\r\n    const currentBlockData = await currentBlock();\r\n    const authdata = JSON.parse(localStorage.getItem(\"auth\"));\r\n    const data = {\r\n      type: \"fluxappupdate\",\r\n      version: 1,\r\n      appSpecification: {\r\n        version: 6,\r\n        name: olddata.name,\r\n        description: olddata.description,\r\n        owner: olddata.owner,\r\n        compose: [\r\n          {\r\n            name: olddata.compose[0].name,\r\n            description: olddata.compose[0].description,\r\n            repotag: olddata.compose[0].repotag,\r\n            ports: olddata.compose[0].ports,\r\n            domains: olddata.compose[0].domains,\r\n            environmentParameters: JSON.parse(environment),\r\n            commands: [],\r\n            containerPorts: olddata.compose[0].containerPorts,\r\n            containerData: olddata.compose[0].containerData,\r\n            cpu: location.state.data?.components\r\n              ? location.state.data?.components[0].cpu\r\n              : location.state.data?.compose[0].cpu,\r\n            ram: location.state.data?.components\r\n              ? location.state.data?.components[0].ram\r\n              : location.state.data?.compose[0].ram,\r\n            hdd: location.state.data?.components\r\n              ? location.state.data?.components[0].hdd\r\n              : location.state.data?.compose[0].hdd,\r\n            tiered: false,\r\n          },\r\n        ],\r\n        instances: 3,\r\n        contacts: [],\r\n        geolocation: [\"acNA\"],\r\n        expire: expire,\r\n      },\r\n      timestamp: new Date().getTime(),\r\n    };\r\n    console.log(data);\r\n\r\n    const transaction = await handleUpdateServer(data);\r\n    toast.success(transaction);\r\n    console.log(transaction, \"transaction\");\r\n    if (transaction) {\r\n      const service = await getServiceApi();\r\n      console.log(service, \"filter\");\r\n\r\n      const filterdata = service.serviceData.filter(\r\n        (data) =>\r\n          data.userid === authdata.user._id &&\r\n          data.servername === location.state.data.name\r\n      );\r\n      const serviceData = {\r\n        _id: filterdata[0]._id,\r\n        userid: authdata.user._id,\r\n        name: location.state.data.description,\r\n        currentBlockData: expire + currentBlockData,\r\n        servername: location.state.data.name,\r\n      };\r\n\r\n      await updateUserService(serviceData).then((res) =>\r\n        toast.success(\"Updated\")\r\n      );\r\n      setFlag(0);\r\n      // Start the timer\r\n      const timerId = setTimeout(() => {\r\n        setIsButtonDisabled(false);\r\n      }, 10000);\r\n      setTimer(timerId);\r\n    }\r\n  };\r\n\r\n  const updateGeolocationData = async () => {\r\n    if (!geolocationData) {\r\n      return toast.error(\"Please fill out geolocation Data\");\r\n    }\r\n    setIsButtonDisabled(true);\r\n    console.log(geolocationData);\r\n    const olddata = await getAppSpecification(location.state.data.name);\r\n    const expire = await getExpire(location.state.data.name);\r\n    const currentBlockData = await currentBlock();\r\n    const authdata = JSON.parse(localStorage.getItem(\"auth\"));\r\n    const data = {\r\n      type: \"fluxappupdate\",\r\n      version: 1,\r\n      appSpecification: {\r\n        version: 6,\r\n        name: olddata.name,\r\n        description: olddata.description,\r\n        owner: olddata.owner,\r\n        compose: [\r\n          {\r\n            name: olddata.compose[0].name,\r\n            description: olddata.compose[0].description,\r\n            repotag: olddata.compose[0].repotag,\r\n            ports: olddata.compose[0].ports,\r\n            domains: olddata.compose[0].domains,\r\n            environmentParameters: olddata.compose[0].environmentParameters,\r\n            commands: [],\r\n            containerPorts: olddata.compose[0].containerPorts,\r\n            containerData: olddata.compose[0].containerData,\r\n            cpu: location.state.data?.components\r\n              ? location.state.data?.components[0].cpu\r\n              : location.state.data?.compose[0].cpu,\r\n            ram: location.state.data?.components\r\n              ? location.state.data?.components[0].ram\r\n              : location.state.data?.compose[0].ram,\r\n            hdd: location.state.data?.components\r\n              ? location.state.data?.components[0].hdd\r\n              : location.state.data?.compose[0].hdd,\r\n            tiered: false,\r\n          },\r\n        ],\r\n        instances: 3,\r\n        contacts: [],\r\n        geolocation: geolocationData,\r\n        expire: expire,\r\n      },\r\n      timestamp: new Date().getTime(),\r\n    };\r\n    console.log(data);\r\n\r\n    const transaction = await handleUpdateServer(data);\r\n    toast.success(transaction);\r\n    console.log(transaction, \"transaction\");\r\n    if (transaction) {\r\n      const service = await getServiceApi();\r\n      console.log(service, \"filter\");\r\n\r\n      const filterdata = service.serviceData.filter(\r\n        (data) =>\r\n          data.userid === authdata.user._id &&\r\n          data.servername === location.state.data.name\r\n      );\r\n      const serviceData = {\r\n        _id: filterdata[0]._id,\r\n        userid: authdata.user._id,\r\n        name: location.state.data.description,\r\n        currentBlockData: expire + currentBlockData,\r\n        servername: location.state.data.name,\r\n      };\r\n\r\n      await updateUserService(serviceData).then((res) =>\r\n        toast.success(\"GeoLocation Updated\")\r\n      );\r\n      // Start the timer\r\n      const timerId = setTimeout(() => {\r\n        setIsButtonDisabled(false);\r\n      }, 10000);\r\n      setTimer(timerId);\r\n    }\r\n  };\r\n\r\n  const updateServerName = async () => {\r\n    const authdata = JSON.parse(localStorage.getItem(\"auth\"));\r\n    const service = await getServiceApi();\r\n    console.log(service, \"filter\");\r\n\r\n    const filterdata = service.serviceData.filter(\r\n      (data) =>\r\n        data.userid === authdata.user._id &&\r\n        data.servername === location.state.data.name\r\n    );\r\n    console.log(filterdata[0]._id);\r\n    const serviceData = {\r\n      _id: filterdata[0]._id,\r\n      changedname: servername,\r\n    };\r\n\r\n    await updateUserService(serviceData).then((res) =>\r\n      toast.success(\"Server Name Updated\")\r\n    );\r\n  };\r\n\r\n  const checkCodeValidity = async () => {\r\n    if (code == \"\") {\r\n      return;\r\n    }\r\n    const valid = await validateCode(code);\r\n    setIsValidCode(valid);\r\n    if (valid) {\r\n      updatePriceData();\r\n    }\r\n  };\r\n\r\n  const onGameChangedHandler = (game) => {\r\n    setSettingsGame(game);\r\n    setSettingsPassword(\"\");\r\n    setSettingsAdmins(\"\");\r\n    setSettingsAddons([]);\r\n    setSettingsVersion([]);\r\n    if (game === \"minecraft\") {\r\n      setSettingsVersionOptions(minecraftVersionOptions);\r\n      setSettingsModes(minecraftMods);\r\n    } else if (game === \"ark\") {\r\n      setSettingsVersionOptions(arkVersionOptions);\r\n      setSettingsModes(arkMods);\r\n    } else {\r\n      setSettingsVersionOptions(valheimVersionOptions);\r\n      setSettingsModes(valheimMods);\r\n    }\r\n    setEnvironment([]);\r\n  };\r\n\r\n  const onAddonChangedHandler = (addons) => {\r\n    setSettingsAddons(addons);\r\n  };\r\n\r\n  const onVersionChangedHandler = (version) => {\r\n    setSettingsVersion(version);\r\n  };\r\n\r\n  const onPasswordChangedHandler = (_password) => {\r\n    setSettingsPassword(_password);\r\n  };\r\n\r\n  const onAdminChangedHandler = (_admin) => {\r\n    setSettingsAdmins(`${_admin}`);\r\n  };\r\n\r\n  const updatePriceData = () => {\r\n    if (isValidCode) {\r\n      const pricedata = gameitems.filter(\r\n        (item) => item.title === location.state.data.description\r\n      );\r\n      const suitabledata =\r\n        pricedata[0].cpu1 ===\r\n        (location.state.data?.components\r\n          ? location.state.data?.components[0].cpu\r\n          : location.state.data?.compose[0].cpu)\r\n          ? pricedata[0].referralPrice1\r\n          : pricedata[0].referralPrice2;\r\n\r\n      const checkout =\r\n        pricedata[0].cpu1 ===\r\n        (location.state.data?.components\r\n          ? location.state.data?.components[0].cpu\r\n          : location.state.data?.compose[0].cpu)\r\n          ? pricedata[0].referralCheckout1\r\n          : pricedata[0].referralCheckout2;\r\n      setPriceData(suitabledata);\r\n      setCheckoutData(checkout);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFluxAuth();\r\n    getIpData();\r\n    getPossibleLocation();\r\n    const pricedata = gameitems.filter(\r\n      (item) => item.title === location.state.data.description\r\n    );\r\n\r\n    const suitabledata =\r\n      pricedata[0].cpu1 ===\r\n      (location.state.data?.components\r\n        ? location.state.data?.components[0].cpu\r\n        : location.state.data?.compose[0].cpu)\r\n        ? pricedata[0].price1\r\n        : pricedata[0].price2;\r\n\r\n    const checkout =\r\n      pricedata[0].cpu1 ===\r\n      (location.state.data?.components\r\n        ? location.state.data?.components[0].cpu\r\n        : location.state.data?.compose[0].cpu)\r\n        ? pricedata[0].checkout1\r\n        : pricedata[0].checkout1;\r\n    setPriceData(suitabledata);\r\n    setCheckoutData(checkout);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    checkCodeValidity();\r\n  }, [code]);\r\n\r\n  const getPossibleLocation = async () => {\r\n    let possibleLocations = [];\r\n\r\n    const response = await fetch(\r\n      \"https://stats.runonflux.io/fluxinfo?projection=geolocation\"\r\n    ).then((res) => res.json());\r\n\r\n    if (response.status === \"success\") {\r\n      const geoData = response.data;\r\n      if (geoData.length > 5000) {\r\n        // all went well\r\n        geoData.forEach((flux) => {\r\n          if (\r\n            flux.geolocation &&\r\n            flux.geolocation.continentCode &&\r\n            flux.geolocation.regionName &&\r\n            flux.geolocation.countryCode\r\n          ) {\r\n            const continentLocation = flux.geolocation.continentCode;\r\n            const countryLocation = `${continentLocation}_${flux.geolocation.countryCode}`;\r\n            const regionLocation = `${countryLocation}_${flux.geolocation.regionName}`;\r\n            const continentLocationExists = possibleLocations.find(\r\n              (location) => location.value === continentLocation\r\n            );\r\n            if (continentLocationExists) {\r\n              continentLocationExists.instances += 1;\r\n            } else {\r\n              possibleLocations.push({\r\n                value: continentLocation,\r\n                instances: 1,\r\n              });\r\n            }\r\n            const countryLocationExists = possibleLocations.find(\r\n              (location) => location.value === countryLocation\r\n            );\r\n            if (countryLocationExists) {\r\n              countryLocationExists.instances += 1;\r\n            } else {\r\n              possibleLocations.push({\r\n                value: countryLocation,\r\n                instances: 1,\r\n              });\r\n            }\r\n            const regionLocationExists = possibleLocations.find(\r\n              (location) => location.value === regionLocation\r\n            );\r\n            if (regionLocationExists) {\r\n              regionLocationExists.instances += 1;\r\n            } else {\r\n              possibleLocations.push({\r\n                value: regionLocation,\r\n                instances: 1,\r\n              });\r\n            }\r\n          }\r\n        });\r\n        setPossibleLocations(possibleLocations);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let text = \"\";\r\n    if (continent !== \"ALL\") {\r\n      if (continent) {\r\n        text = \"ac\" + text + continent.value;\r\n      }\r\n      if (country) {\r\n        text = text + \"_\" + country.value;\r\n      }\r\n      if (region) {\r\n        text = text + \"_\" + region.value;\r\n      }\r\n    } else {\r\n      text = \"\";\r\n    }\r\n    // country && text =  text+country + \"_\";\r\n    // region && text = text+ region;\r\n    setGeolocationData([text], \"Adsf\");\r\n  }, [continent, country, region]);\r\n\r\n  useEffect(() => {\r\n    let password_ = null,\r\n      admins_ = null;\r\n    console.log({ settingsPassword, settingsAdmins });\r\n    if (settingsPassword !== \"\")\r\n      if (settingsGame === \"minecraft\") {\r\n        password_ = `RCON_PASSWORD=${settingsPassword}`;\r\n      } else if (settingsGame === \"ark\") {\r\n        password_ = `SERVER_PASSWORD=${settingsPassword}`;\r\n      } else {\r\n        password_ = `SERVER_PASS=${settingsPassword}`;\r\n      }\r\n    if (settingsAdmins !== \"\")\r\n      if (settingsGame === \"minecraft\") {\r\n        admins_ = `OPS=${settingsAdmins}`;\r\n      } else if (settingsGame === \"ark\") {\r\n        admins_ = `ADMINS=${settingsAdmins}`;\r\n      } else {\r\n        admins_ = `ADMINLIST_IDS=${settingsAdmins}`;\r\n      }\r\n    if (password_ !== null && admins_ !== null) {\r\n      setEnvironment([\r\n        password_,\r\n        ...settingsVersion,\r\n        ...settingsAddons,\r\n        admins_,\r\n      ]);\r\n    } else if (password_ === null && admins_ !== null) {\r\n      setEnvironment([...settingsVersion, ...settingsAddons, admins_]);\r\n    } else if (password_ !== null && admins_ === null) {\r\n      setEnvironment([password_, ...settingsVersion, ...settingsAddons]);\r\n    } else {\r\n      setEnvironment([...settingsVersion, ...settingsAddons]);\r\n    }\r\n  }, [settingsPassword, settingsVersion, settingsAddons, settingsAdmins]);\r\n\r\n  console.log(geolocationData);\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [timer]);\r\n  return (\r\n    <Wrapper>\r\n      <Sidebar>\r\n        <SidebarTab\r\n          active={activeTab === tabs.controls}\r\n          onClick={() => {\r\n            setActiveTab(tabs.controls);\r\n          }}\r\n        >\r\n          Controls\r\n        </SidebarTab>\r\n        <SidebarTab\r\n          active={activeTab === tabs.settings}\r\n          onClick={() => {\r\n            setActiveTab(tabs.settings);\r\n          }}\r\n        >\r\n          Settings\r\n        </SidebarTab>\r\n        <SidebarTab\r\n          active={activeTab === tabs.guides}\r\n          onClick={() => {\r\n            setActiveTab(tabs.guides);\r\n          }}\r\n        >\r\n          Guide's\r\n        </SidebarTab>\r\n      </Sidebar>\r\n      <ContentWrapper>\r\n        {activeTab === tabs.controls && (\r\n          <WrapperContainer>\r\n            <ServerInfoPart>\r\n              <Title>Server Information</Title>\r\n              <Row>Server Name - {location.state.data.name}</Row>\r\n              <Row>Description - {location.state.data.description}</Row>\r\n              IPv4 - {ipData ? ipData[0].ip.split(\":\")[0] : \"setting\"}\r\n              {/* {ipData?.map((item, key) => (\r\n           <Row key={key}>\r\n              - PORT -{\" \"}\r\n            {location.state.data?.components[0].ports}\r\n           </Row>\r\n          ))} */}\r\n              {/* <Row>IPv4 - {ipData?.ipaddress}</Row> */}\r\n              {console.log(location.state.data)}\r\n              <Row>\r\n                Port - {\"34001\"}\r\n                {location.state.data?.components\r\n                  ? location.state.data?.components[0]?.[0]?.ports\r\n                  : location.state.data?.compose[0].ports[0]}\r\n              </Row>\r\n            </ServerInfoPart>\r\n            <ButtonGroup>\r\n              <ColumnButton>\r\n                <Title> Control</Title>\r\n                <Button\r\n                  text=\"START\"\r\n                  width=\"100%\"\r\n                  radius=\"6px\"\r\n                  fweight=\"500\"\r\n                  color=\"white\"\r\n                  fsize=\"16px\"\r\n                  padding=\"15px\"\r\n                  onClick={() => handleStartClick(location.state.data.name)}\r\n                />\r\n                <Button\r\n                  text=\"STOP\"\r\n                  width=\"100%\"\r\n                  radius=\"6px\"\r\n                  fweight=\"500\"\r\n                  color=\"white\"\r\n                  fsize=\"16px\"\r\n                  padding=\"15px\"\r\n                  onClick={() => handleStopClick(location.state.data.name)}\r\n                />\r\n                <Button\r\n                  text=\"RESTART\"\r\n                  width=\"100%\"\r\n                  radius=\"6px\"\r\n                  fweight=\"500\"\r\n                  color=\"white\"\r\n                  fsize=\"16px\"\r\n                  padding=\"15px\"\r\n                  onClick={() => handleRestartClick(location.state.data.name)}\r\n                />\r\n              </ColumnButton>\r\n              <ColumnButton>\r\n                <Title> Deployment Control </Title>\r\n                <Button\r\n                  text=\"Reinstall\"\r\n                  width=\"100%\"\r\n                  radius=\"6px\"\r\n                  fweight=\"500\"\r\n                  color=\"white\"\r\n                  fsize=\"16px\"\r\n                  padding=\"15px\"\r\n                  onClick={() => handleReinstallClick(location.state.data.name)}\r\n                />\r\n\r\n                <Button\r\n                  text=\"Move Server\"\r\n                  width=\"100%\"\r\n                  radius=\"6px\"\r\n                  fweight=\"500\"\r\n                  color=\"white\"\r\n                  fsize=\"16px\"\r\n                  padding=\"15px\"\r\n                  onClick={() => handleRedeployClick(location.state.data.name)}\r\n                />\r\n              </ColumnButton>\r\n              <ColumnButton>\r\n                <Title>Data Control</Title>\r\n                {/* <Button>Load Backup</Button> */}\r\n                <Button\r\n                  text=\" Clean SSD\"\r\n                  width=\"100%\"\r\n                  radius=\"6px\"\r\n                  fweight=\"500\"\r\n                  color=\"white\"\r\n                  fsize=\"16px\"\r\n                  padding=\"15px\"\r\n                  onClick={() =>\r\n                    handleHardRedeployClick(location.state.data.name)\r\n                  }\r\n                />\r\n              </ColumnButton>\r\n            </ButtonGroup>\r\n            <Title>Update</Title>\r\n            <ButtonGroup2>\r\n              <Input\r\n                placeholder=\"Server Name\"\r\n                onChange={(e) => setServername(e.target.value)}\r\n              />\r\n              <Button\r\n                text=\"Set Name\"\r\n                width=\"100%\"\r\n                radius=\"6px\"\r\n                fweight=\"500\"\r\n                color=\"white\"\r\n                fsize=\"16px\"\r\n                padding=\"15px\"\r\n                onClick={updateServerName}\r\n              />\r\n            </ButtonGroup2>\r\n            {/* <ButtonGroup2>\r\n              <Input\r\n                placeholder=\"[`settings`]\"\r\n                onChange={(e) => setEnvironment(e.target.value)}\r\n              />\r\n              <Button\r\n                text=\"Settings\"\r\n                width=\"100%\"\r\n                radius=\"6px\"\r\n                fweight=\"500\"\r\n                color=\"white\"\r\n                fsize=\"16px\"\r\n                padding=\"15px\"\r\n                onClick={!isButtonDisabled ? updateEnvironmentData : undefined}\r\n                bgcolor={isButtonDisabled === true && \"rgb(255,255,255,0.3)\"}\r\n              />\r\n            </ButtonGroup2> */}\r\n            <ButtonGroup2>\r\n              {possibleLocations && (\r\n                <Select\r\n                  placeholder=\"Geolocation\"\r\n                  className=\"basic-single\"\r\n                  classNamePrefix=\"select\"\r\n                  isSearchable=\"true\"\r\n                  options={continentsOptions(\"false\", possibleLocations)}\r\n                  onChange={(e) => {\r\n                    setContinent(e);\r\n                    setCountry(\"\");\r\n                    setRegion(\"\");\r\n                  }}\r\n                />\r\n              )}\r\n              {continent ? (\r\n                <Select\r\n                  onChange={(e) => {\r\n                    setCountry(e);\r\n                    setRegion(\"\");\r\n                  }}\r\n                  placeholder=\"Country\"\r\n                  className=\"basic-single\"\r\n                  classNamePrefix=\"select\"\r\n                  isSearchable=\"true\"\r\n                  value={[country]}\r\n                  options={countriesOptions(\r\n                    continent.value,\r\n                    \"false\",\r\n                    possibleLocations\r\n                  )}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n              {continent && country && (\r\n                <Select\r\n                  placeholder=\"Region\"\r\n                  className=\"basic-single\"\r\n                  classNamePrefix=\"select\"\r\n                  isSearchable=\"true\"\r\n                  value={[region]}\r\n                  options={regionsOptions(\r\n                    continent.value,\r\n                    country.value,\r\n                    \"false\",\r\n                    possibleLocations\r\n                  )}\r\n                  onChange={(e) => {\r\n                    setRegion(e);\r\n                  }}\r\n                />\r\n              )}\r\n            </ButtonGroup2>\r\n            <ButtonGroup2>\r\n              {possibleLocations && (\r\n                <Button\r\n                  text=\"Set Geolocation\"\r\n                  width=\"100%\"\r\n                  radius=\"6px\"\r\n                  fweight=\"500\"\r\n                  color=\"white\"\r\n                  fsize=\"16px\"\r\n                  padding=\"15px\"\r\n                  onClick={\r\n                    !isButtonDisabled ? updateGeolocationData : undefined\r\n                  }\r\n                  bgcolor={isButtonDisabled === true && \"rgb(255,255,255,0.3)\"}\r\n                />\r\n              )}\r\n              <Button\r\n                onClick={!isButtonDisabled ? updateExpireData : undefined}\r\n                bgcolor={isButtonDisabled === true && \"rgb(255,255,255,0.3)\"}\r\n                text=\"Extend Rental\"\r\n                width=\"100%\"\r\n                radius=\"6px\"\r\n                fweight=\"500\"\r\n                color=\"white\"\r\n                fsize=\"16px\"\r\n                padding=\"15px\"\r\n              />\r\n            </ButtonGroup2>\r\n            {clickCheck && (\r\n              <>\r\n                <CostDetail>\r\n                  <ReferalInput\r\n                    placeholder=\"Referal Code\"\r\n                    type=\"text\"\r\n                    value={code}\r\n                    onChange={(e) => setCode(e.target.value)}\r\n                  />\r\n                  {isValidCode ? (\r\n                    <FaCheck style={{ color: \"green\" }} />\r\n                  ) : (\r\n                    <FaCheck style={{ color: \"red\" }} />\r\n                  )}\r\n                </CostDetail>\r\n                {/* {clickCheck && ( */}\r\n                <Paypal cost={priceData} setFlag={setFlag} />\r\n                <CoinbaseCommerceButton\r\n                  styled\r\n                  // checkoutId=\"c632fe45-0566-48e8-9fdc-59c35b7234ca\"\r\n                  checkoutId={checkoutdata}\r\n                  // chargeId=\"CWL2LG2J\"\r\n                  onChargeSuccess={(data) => {\r\n                    console.log(data);\r\n                    setFlag(1);\r\n                  }}\r\n                  onChargeFailure={(data) => {\r\n                    console.log(data);\r\n                  }}\r\n                  onPaymentDetected={(data) => {\r\n                    console.log(data);\r\n                  }}\r\n                  onModalClosed={() => {\r\n                    console.log(\"Payment Cancelled\");\r\n                  }}\r\n                />\r\n              </>\r\n            )}\r\n          </WrapperContainer>\r\n        )}\r\n        {activeTab === tabs.settings && (\r\n          <WrapperContainer>\r\n            <SettingsWrapper>\r\n              <SettingsTopArea>\r\n                <SettingsDetails>\r\n                  <SettingsControl>\r\n                    <Title>Game</Title>\r\n                    <Select\r\n                      styles={selectorStyles}\r\n                      options={gamesOptions}\r\n                      onChange={(e) => {\r\n                        onGameChangedHandler(e.value);\r\n                      }}\r\n                    />\r\n                  </SettingsControl>\r\n                  <SettingsControl>\r\n                    <Title>Password</Title>\r\n                    <SettingsInput\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      onChange={(e) => {\r\n                        onPasswordChangedHandler(e.target.value);\r\n                      }}\r\n                    />\r\n                  </SettingsControl>\r\n                  <SettingsControl>\r\n                    <Title>Game Version</Title>\r\n                    <Select\r\n                      styles={selectorStyles}\r\n                      options={settingsVersionOptions}\r\n                      onChange={(e) => {\r\n                        onVersionChangedHandler(e.value);\r\n                      }}\r\n                    />\r\n                  </SettingsControl>\r\n                  <SettingsControl>\r\n                    <Title>Addons / Mods</Title>\r\n                    <Select\r\n                      styles={selectorStyles}\r\n                      options={settingsModes}\r\n                      onChange={(e) => {\r\n                        onAddonChangedHandler(e.value);\r\n                      }}\r\n                    />\r\n                  </SettingsControl>\r\n                  <SettingsControl>\r\n                    <Title>Set Admin</Title>\r\n                    <SettingsInput\r\n                      type=\"text\"\r\n                      placeholder=\"Admin\"\r\n                      onChange={(e) => {\r\n                        onAdminChangedHandler(e.target.value);\r\n                      }}\r\n                    />\r\n                  </SettingsControl>\r\n                </SettingsDetails>\r\n                <ApplySettingsArea>\r\n                  <ApplySettingsButton onClick={updateEnvironmentData}>\r\n                    Apply Settings\r\n                  </ApplySettingsButton>\r\n                  <ApplySettingsDescription>\r\n                    Changing Game type, Game Version, and or Addons / Mods will\r\n                    delete current save files\r\n                  </ApplySettingsDescription>\r\n                </ApplySettingsArea>\r\n              </SettingsTopArea>\r\n              <SettingsBottomArea>\r\n                <SettingsControl>\r\n                  <Title>Advanced V</Title>\r\n                  <SettingsInput\r\n                    type=\"text\"\r\n                    value={JSON.stringify(environment)}\r\n                    disabled\r\n                    style={{ width: \"100%\" }}\r\n                    placeholder=\"Fill Current Settings Array\"\r\n                  />\r\n                </SettingsControl>\r\n              </SettingsBottomArea>\r\n            </SettingsWrapper>\r\n          </WrapperContainer>\r\n        )}\r\n        {activeTab === tabs.guides && (\r\n          <WrapperContainer>\r\n            <GuideLinkGroup>\r\n              <GuideLink\r\n                target=\"_blank\"\r\n                href=\"https://www.youtube.com/channel/UC8SYbJEmrQt6JlwM8Vub2Ww\"\r\n              >\r\n                Youtube\r\n              </GuideLink>\r\n              <GuideLink target=\"_blank\" href=\"#\">\r\n                Instagram\r\n              </GuideLink>\r\n              <GuideLink\r\n                target=\"_blank\"\r\n                href=\"https://www.tiktok.com/@cube_hosting?is_from_webapp=1&sender_device=pc\"\r\n              >\r\n                Ticktok\r\n              </GuideLink>\r\n            </GuideLinkGroup>\r\n            <Row>Using Controls and Settings</Row>\r\n            <YouTube videoId=\"2g811Eo7K8U\" onReady={onPlayerReady} />\r\n            <AdvancedDocumentation target=\"_blank\" href=\"#\">\r\n              Advanced Documentation\r\n            </AdvancedDocumentation>\r\n          </WrapperContainer>\r\n        )}\r\n      </ContentWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled(Column)`\r\n  background-color: #313131;\r\n  width: 100%;\r\n  color: white;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Sidebar = styled.div`\r\n  width: 250px;\r\n  height: 100vh;\r\n  background-color: #2f2f2f;\r\n  padding-top: 100px;\r\n`;\r\n\r\nconst SettingsWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst SettingsTopArea = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  gap: 14px;\r\n`;\r\n\r\nconst SettingsBottomArea = styled.div`\r\n  width: auto;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 14px;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst SettingsControl = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n`;\r\n\r\nconst SettingsInput = styled.input`\r\n  height: 50px;\r\n  width: 400px;\r\n  border-radius: 8px;\r\n  color: white;\r\n  padding: 8px 12px;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  background-color: #272727;\r\n`;\r\n\r\nconst ApplySettingsArea = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n`;\r\n\r\nconst ApplySettingsDescription = styled.div`\r\n  font-size: 20px;\r\n  color: white;\r\n  text-align: center;\r\n  width: 200px;\r\n`;\r\n\r\nconst ApplySettingsButton = styled.div`\r\n  padding: 8px 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n  color: white;\r\n  background-color: #00cfc8;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SettingsDetails = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n  font-size: 24px;\r\n  color: white;\r\n`;\r\n\r\nconst SidebarTab = styled.div`\r\n  width: 100%;\r\n  height: 90px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  font-weight: 500;\r\n  background-color: ${(props) => {\r\n    return props.active === true ? \"#212121\" : \"#2f2f2f\";\r\n  }};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  width: calc(100% - 250px);\r\n  height: 100vh;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst GuideLinkGroup = styled.div`\r\n  height: 120px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst GuideLink = styled.a`\r\n  color: white;\r\n  font-size: 24px;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst AdvancedDocumentation = styled.a`\r\n  color: #28acf6;\r\n  font-size: 22px;\r\n  text-decoration: none;\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst WrapperContainer = styled(Column)`\r\n  gap: 20px;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  max-width: 900px;\r\n  width: 95%;\r\n  margin-top: 140px;\r\n`;\r\n\r\nconst ServerInfoPart = styled(Column)`\r\n  gap: 5px;\r\n  align-items: flex-start;\r\n`;\r\nconst Title = styled.div`\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  margin-bottom: 5px;\r\n`;\r\nconst CostDetail = styled(Row)`\r\n  gap: 20px;\r\n`;\r\nconst ReferalInput = styled.input`\r\n  height: 40px;\r\n  border-radius: 6px;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 24px;\r\n  padding: 4px 6px;\r\n`;\r\nconst ButtonGroup = styled(Row)`\r\n  gap: 10px;\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n`;\r\nconst ButtonGroup2 = styled(ButtonGroup)`\r\n  gap: 10px;\r\n  align-items: flex-start;\r\n  flex-wrap: nowrap;\r\n`;\r\nconst ColumnButton = styled(Column)`\r\n  gap: 5px;\r\n  width: 250px;\r\n`;\r\n\r\nexport default ServerInfo;\r\n","E:\\WorkingData\\hosting-website\\frontend\\src\\pages\\payment.js",["166","167","168"],"import styled from \"styled-components\";\r\nimport { Column, Row } from \"../components/Element\";\r\nimport Button from \"../components/Element/button\";\r\nimport Paypal from \"../components/Paypal\";\r\nimport CoinbaseCommerceButton from \"react-coinbase-commerce\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport getHash from \"../utills/gethash\";\r\nimport { getServiceApi, serviceApi } from \"../action/action\";\r\nimport { codeUsedApi } from \"../action/code\";\r\nimport {\r\n  currentBlock,\r\n  getAmout,\r\n  getFluxAuth,\r\n  getPaidaddress,\r\n} from \"../utills/manager\";\r\nimport bitcoin from \"bitcoinjs-lib\";\r\nimport bitcoinMessage from \"bitcoinjs-message\";\r\nimport { getRandomNumber } from \"../utills\";\r\nimport { FaCheck } from \"react-icons/fa\";\r\nimport { toast } from \"react-toastify\";\r\nimport { validateCode } from \"../action/code\";\r\n\r\nconst ServerInfo = () => {\r\n  const location = useLocation();\r\n\r\n  const cpu =\r\n    location.state.flag === 1\r\n      ? location.state.data.cpu1\r\n      : location.state.data.cpu2;\r\n  const ram =\r\n    location.state.flag === 1\r\n      ? location.state.data.ram1\r\n      : location.state.data.ram2;\r\n  const hdd =\r\n    location.state.flag === 1\r\n      ? location.state.data.ssd1\r\n      : location.state.data.ssd2;\r\n  const zelID = \"1GLMJwdJEHySNwSqkC4iKpoBU215m7BkDk\";\r\n  const zelIDPrivatekey =\r\n    \"L3yGy6krc9VywytHCNEQfuMdpKrPzCfqW9knYAqCyGkKFxLnoXCE\";\r\n  const [total, setTotal] = useState(\r\n    location.state.flag === 1\r\n      ? location.state.data.price1\r\n      : location.state.data.price2\r\n  );\r\n  const [checkout, setCheckout] = useState(\r\n    location.state.flag === 1\r\n      ? location.state.data.checkout1\r\n      : location.state.data.checkout2\r\n  );\r\n  const [transactiondata, setTransactiondata] = useState(\"\");\r\n  const [registerhash, setRegisterhash] = useState(\"\");\r\n  const [servicenumber, setServiceNumber] = useState();\r\n  const [code, setCode] = useState(\"\");\r\n  const [flag, setFlag] = useState();\r\n  const [isValidCode, setIsValidCode] = useState(false);\r\n  const referralPrice =\r\n    location.state.flag === 1\r\n      ? location.state.data.referralPrice1\r\n      : location.state.data.referralPrice2;\r\n  const initialData = async () => {\r\n    getFluxAuth();\r\n    const data = await getServiceApi();\r\n    console.log(data.serviceData.length);\r\n    setServiceNumber(data.serviceData.length);\r\n  };\r\n\r\n  const checkCodeValidity = async () => {\r\n    if (code == \"\") {\r\n      return;\r\n    }\r\n    const valid = await validateCode(code);\r\n    setIsValidCode(valid);\r\n    if (valid) {\r\n      updatePriceData();\r\n    }\r\n  };\r\n\r\n  const updatePriceData = () => {\r\n    if (isValidCode) {\r\n      console.log(\r\n        \"Total: \",\r\n        location.state.flag === 1\r\n          ? location.state.data.referralPrice1\r\n          : location.state.data.referralPrice2\r\n      );\r\n      console.log(\"State: \", location.state);\r\n      setTotal(\r\n        location.state.flag === 1\r\n          ? location.state.data.referralPrice1\r\n          : location.state.data.referralPrice2\r\n      );\r\n      setCheckout(\r\n        location.state.flag === 1\r\n          ? location.state.data.referralCheckout1\r\n          : location.state.data.referralCheckout2\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    initialData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    checkCodeValidity();\r\n  }, [code]);\r\n\r\n  // const logoutdata = async () => {\r\n  //   await fetch(\"https://api.runonflux.io/zelid/logoutcurrentsession\", {\r\n  //     method: \"get\",\r\n  //     headers: {\r\n  //       zelidauth: {\r\n  //         zelid: zelID,\r\n  //         signature: signature,\r\n  //         loginPhrase: logininfo,\r\n  //       },\r\n  //     },\r\n  //   })\r\n  //     .then((res) => res.json())\r\n  //     .then((response) => console.log(response.data))\r\n  //     .catch((err) => console.log(err));\r\n  // };\r\n\r\n  const handleButtonClick = async () => {\r\n    const randomservice = Math.floor(Math.random() * 10000000 + 1);\r\n    const usdedCode = code;\r\n    const isValidUsedCode = isValidCode;\r\n    const data = {\r\n      type: \"fluxappregister\",\r\n      version: 1,\r\n      appSpecification: {\r\n        version: 6,\r\n        name: `fluidservices${randomservice}`,\r\n        description: location.state.data.title,\r\n        owner: zelID,\r\n        compose: [\r\n          {\r\n            name: getRandomNumber(),\r\n            description: location.state.data.title,\r\n            repotag: location.state.data.repotag,\r\n            ports: location.state.data.port,\r\n            domains: location.state.data.domains,\r\n            environmentParameters: location.state.data.environmentParameters,\r\n            commands: [],\r\n            containerPorts: location.state.data.containerPorts,\r\n            containerData: location.state.data.containerData,\r\n            cpu: cpu,\r\n            ram: ram * 1000,\r\n            hdd: hdd,\r\n            tiered: false,\r\n          },\r\n        ],\r\n        instances: 3,\r\n        contacts: [],\r\n        geolocation: [\"acNA\"],\r\n        expire: 22000,\r\n      },\r\n      timestamp: new Date().getTime(),\r\n    };\r\n\r\n    const signatureinfo =\r\n      data.type +\r\n      data.version +\r\n      JSON.stringify(data.appSpecification) +\r\n      data.timestamp;\r\n    const keyPair = bitcoin.ECPair.fromWIF(zelIDPrivatekey);\r\n    const privateKey = keyPair.d.toBuffer(32);\r\n    const message = signatureinfo;\r\n    const signatureData = bitcoinMessage.sign(\r\n      message,\r\n      privateKey,\r\n      keyPair.compressed\r\n    );\r\n    console.log(signatureinfo);\r\n    data.signature = Buffer.from(signatureData).toString(\"base64\");\r\n    const registerhash = await fetch(\r\n      \"https://api.runonflux.io/apps/appregister\",\r\n      {\r\n        method: \"post\",\r\n        headers: {\r\n          zelidauth: localStorage.getItem(\"fluxauth\"),\r\n        },\r\n        body: JSON.stringify(data),\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setRegisterhash(response.data);\r\n        return response.data;\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    const paidaddress = await getPaidaddress();\r\n\r\n    const amount = await getAmout(cpu, ram * 1000, hdd, 22000);\r\n\r\n    console.log(registerhash, amount, paidaddress, \"paidaddress\");\r\n    const hashdata = await getHash(registerhash, amount, paidaddress);\r\n    console.log(hashdata);\r\n\r\n    const transaction = await fetch(\r\n      `https://api.runonflux.io/daemon/sendrawtransaction`,\r\n      {\r\n        method: \"post\",\r\n        headers: {\r\n          zelidauth: localStorage.getItem(\"fluxauth\"),\r\n        },\r\n        body: JSON.stringify({\r\n          hexstring: hashdata,\r\n          allowhighfees: false,\r\n        }),\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setTransactiondata(response.data);\r\n        toast(response.data);\r\n        return response.data;\r\n      })\r\n      .catch((err) => console.log(err));\r\n    if (transaction) {\r\n      const authdata = JSON.parse(localStorage.getItem(\"auth\"));\r\n      // eslint-disable-next-line no-use-before-define\r\n      const currentBlockData = await currentBlock();\r\n      const servername = `fluidservices${randomservice}`;\r\n      const serviceData = {\r\n        userid: authdata.user._id,\r\n        name: location.state.data.title,\r\n        currentBlockData: currentBlockData + 22000,\r\n        servername: servername,\r\n      };\r\n      await serviceApi(serviceData);\r\n      if (isValidUsedCode)\r\n        await codeUsedApi(usdedCode, servername, currentBlockData + 22000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PaymentPart>\r\n        <Title>Billing</Title>\r\n        <PriceDetail>\r\n          <PriceDetailWrapper>\r\n            <row>{location.state.data.title}</row>\r\n            <Row>\r\n              <BoldTitle>{cpu}</BoldTitle>\r\n              vCores\r\n            </Row>\r\n            <Row>\r\n              <BoldTitle>{ram}</BoldTitle>GB RAM\r\n            </Row>\r\n            <Row>\r\n              <BoldTitle>{hdd}</BoldTitle>GB Storage\r\n            </Row>\r\n          </PriceDetailWrapper>\r\n        </PriceDetail>\r\n        <CostDetail>\r\n          <Title>Total Cost</Title>\r\n          <BoldTitle>\r\n            {total} /{\" \"}\r\n            <span style={{ color: \"red\" }}>Referral Cost: {referralPrice}</span>\r\n          </BoldTitle>\r\n        </CostDetail>\r\n        <CostDetail>\r\n          <Title>Referral Code: </Title>\r\n          <ReferalInput\r\n            placeholder=\"Referal Code\"\r\n            type=\"text\"\r\n            value={code}\r\n            onChange={(e) => setCode(e.target.value)}\r\n          />\r\n          {isValidCode ? (\r\n            <FaCheck style={{ color: \"green\" }} />\r\n          ) : (\r\n            <FaCheck style={{ color: \"red\" }} />\r\n          )}\r\n        </CostDetail>\r\n\r\n        {flag === 1 ? (\r\n          <ButtonWrapper>\r\n            {registerhash ? (\r\n              registerhash.message ? (\r\n                <Column>\r\n                  <Button\r\n                    text=\"Complete Purchase\"\r\n                    width=\"180px\"\r\n                    radius=\"6px\"\r\n                    fweight=\"500\"\r\n                    color=\"white\"\r\n                    fsize=\"16px\"\r\n                    padding=\"15px\"\r\n                    onClick={handleButtonClick}\r\n                  />\r\n                  {registerhash.message}\r\n                </Column>\r\n              ) : (\r\n                <Button\r\n                  text={<>Please check {transactiondata} link</>}\r\n                  width=\"100%\"\r\n                  radius=\"6px\"\r\n                  fweight=\"500\"\r\n                  color=\"white\"\r\n                  fsize=\"16px\"\r\n                  padding=\"15px\"\r\n                />\r\n              )\r\n            ) : (\r\n              <Button\r\n                text=\"Complete Purchase\"\r\n                width=\"180px\"\r\n                radius=\"6px\"\r\n                fweight=\"500\"\r\n                color=\"white\"\r\n                fsize=\"16px\"\r\n                padding=\"15px\"\r\n                onClick={handleButtonClick}\r\n              />\r\n            )}\r\n          </ButtonWrapper>\r\n        ) : (\r\n          <>\r\n            <Paypal cost={total} setFlag={setFlag} />\r\n            <CoinbaseCommerceButton\r\n              styled\r\n              // checkoutId=\"c632fe45-0566-48e8-9fdc-59c35b7234ca\"\r\n              checkoutId={checkout}\r\n              // chargeId=\"CWL2LG2J\"\r\n              onChargeSuccess={(data) => {\r\n                console.log(data);\r\n                setFlag(1);\r\n              }}\r\n              onChargeFailure={(data) => {\r\n                console.log(data);\r\n              }}\r\n              onPaymentDetected={(data) => {\r\n                setFlag(1);\r\n              }}\r\n              onModalClosed={() => {\r\n                console.log(\"Payment Cancelled\");\r\n              }}\r\n            />\r\n          </>\r\n        )}\r\n      </PaymentPart>\r\n    </Wrapper>\r\n  );\r\n};\r\nconst Wrapper = styled(Column)`\r\n  background-color: #313131;\r\n  width: 100%;\r\n  color: white;\r\n  padding: 20px;\r\n  gap: 20px;\r\n  height: 100vh;\r\n`;\r\nconst PaymentPart = styled(Column)`\r\n  gap: 30px;\r\n  margin-top: 100px;\r\n  max-width: 1000px;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n`;\r\n\r\nconst PriceDetail = styled(Row)`\r\n  gap: 20px;\r\n  width: 100%;\r\n  justify-content: center;\r\n`;\r\nconst CostDetail = styled(Row)`\r\n  gap: 20px;\r\n`;\r\nconst PriceDetailWrapper = styled(Column)`\r\n  width: 100%;\r\n  gap: 20px;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 20px;\r\n`;\r\nconst BoldTitle = styled.div`\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  margin-right: 10px;\r\n`;\r\nconst ButtonWrapper = styled(Row)`\r\n  justify-content: center;\r\n  gap: 20px;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\nconst ReferalInput = styled.input`\r\n  height: 40px;\r\n  border-radius: 6px;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 24px;\r\n  padding: 4px 6px;\r\n`;\r\nexport default ServerInfo;\r\n","E:\\WorkingData\\hosting-website\\frontend\\src\\pages\\profile.js",["169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193"],"E:\\WorkingData\\hosting-website\\frontend\\src\\pages\\Auth\\login.js",["194","195"],"import styled from \"styled-components\";\r\nimport { Column, DefaultImage, GreenText } from \"../../components/Element\";\r\nimport Input from \"../../components/Element/input\";\r\nimport Button from \"../../components/Element/button\";\r\nimport { useState } from \"react\";\r\nimport { Logo } from \"../../components/Image\";\r\nimport { loginApi } from \"../../action/action\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const [logininfo, setLoginInfo] = useState({\r\n    userinfo: \"\",\r\n    password: \"\",\r\n  });\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState();\r\n\r\n  const handleChange = (e) => {\r\n    setLoginInfo({ ...logininfo, [e.target.name]: e.target.value });\r\n  };\r\n  const handleClick = async () => {\r\n    const data = await loginApi(logininfo);\r\n    if (data.message) {\r\n      setError(data.message);\r\n    } else {\r\n      localStorage.setItem(\"auth\", JSON.stringify(data));\r\n      navigate(\"/profile\", {\r\n        state: {\r\n          data: data,\r\n        },\r\n      });\r\n\r\n      setLoginInfo({\r\n        userinfo: \"\",\r\n        password: \"\",\r\n      });\r\n      setError(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <DefaultImage src={Logo} />\r\n      <Container>\r\n        <Title>Sign In</Title>\r\n        {error && <ErrorWrapper>{error}</ErrorWrapper>}\r\n        <Input\r\n          name=\"userinfo\"\r\n          placeholder=\"Email or Username\"\r\n          fsize=\"18px\"\r\n          onChange={handleChange}\r\n          value={logininfo.userinfo}\r\n        />\r\n        <Input\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          fsize=\"18px\"\r\n          onChange={handleChange}\r\n          type=\"password\"\r\n          value={logininfo.password}\r\n        />\r\n        <Button\r\n          text=\"Sign In\"\r\n          width=\"100%\"\r\n          radius=\"6px\"\r\n          fweight=\"500\"\r\n          color=\"white\"\r\n          fsize=\"24px\"\r\n          padding=\"15px\"\r\n          onClick={handleClick}\r\n        />\r\n        <a href=\"/register\" class=\"custom-link\">Create account</a>\r\n        <a class=\"custom-link\">Forgot your password</a>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled(Column)`\r\n  gap: 30px;\r\n  background-color: #313131;\r\n  justify-content: center;\r\n  width: 100%;\r\n  padding: 10px;\r\n  height: 100vh;\r\n  img {\r\n    width: 200px;\r\n    margin-right: 40px;\r\n  }\r\n`;\r\nconst Container = styled(Column)`\r\n  gap: 30px;\r\n  color: white;\r\n  padding: 25px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 25px rgba(0, 0, 0, 0.2);\r\n  border: 1px px double transparent;\r\n  font-size: 14px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\nconst Title = styled.div`\r\n  font-size: 30px;\r\n  font-weight: 500;\r\n`;\r\nconst ErrorWrapper = styled.div`\r\n  color: #f93861;\r\n  border: solid 4px #f14668;\r\n  border-radius: 4px;\r\n  padding: 1.25em 1.5em;\r\n  border-width: 0 0 0 4px !important;\r\n  width: 100%;\r\n  background-color: rgba(39, 39, 39, 0.51) !important;\r\n`;\r\n\r\nexport default Login;\r\n","E:\\WorkingData\\hosting-website\\frontend\\src\\pages\\Auth\\register.js",["196","197"],"import styled from \"styled-components\";\r\nimport { Column, DefaultImage, GreenText } from \"../../components/Element\";\r\nimport Input from \"../../components/Element/input\";\r\nimport Button from \"../../components/Element/button\";\r\nimport { useState } from \"react\";\r\nimport { Logo } from \"../../components/Image\";\r\nimport { registerApi } from \"../../action/action\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n  const [registerinfo, setRegisterInfo] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmpassword: \"\",\r\n  });\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState();\r\n  const handleChange = (e) => {\r\n    setRegisterInfo({ ...registerinfo, [e.target.name]: e.target.value });\r\n  };\r\n  const handleClick = async () => {\r\n    try {\r\n      const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n      const isValidEmail = regex.test(registerinfo.email);\r\n      if (\r\n        registerinfo.confirmpassword !== registerinfo.password ||\r\n        !isValidEmail\r\n      ) {\r\n        return setError(\r\n          \"Something went wrong with the Register, please try again.\"\r\n        );\r\n      }\r\n      const data = await registerApi(registerinfo);\r\n      if (data.message) {\r\n        setError(data.message);\r\n      } else {\r\n        alert(\"success\");\r\n        console.log(data);\r\n        navigate(\"/profile\", {\r\n          state: {\r\n            data: data,\r\n          },\r\n        });\r\n        setRegisterInfo({\r\n          username: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmpassword: \"\",\r\n        });\r\n        setError(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <DefaultImage src={Logo} />\r\n      <Container>\r\n        <Title>Sign Up</Title>\r\n        {error && <ErrorWrapper>{error}</ErrorWrapper>}\r\n        <Input\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          fsize=\"18px\"\r\n          value={registerinfo.username}\r\n          onChange={handleChange}\r\n        />\r\n        <Input\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          fsize=\"18px\"\r\n          value={registerinfo.email}\r\n          onChange={handleChange}\r\n          type=\"email\"\r\n        />\r\n        <Input\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          fsize=\"18px\"\r\n          value={registerinfo.password}\r\n          onChange={handleChange}\r\n          type=\"password\"\r\n        />\r\n        <Input\r\n          name=\"confirmpassword\"\r\n          placeholder=\"Confirm Password\"\r\n          value={registerinfo.confirmpassword}\r\n          fsize=\"18px\"\r\n          onChange={handleChange}\r\n          type=\"password\"\r\n        />\r\n\r\n        <Button\r\n          text=\"Sign Up\"\r\n          width=\"100%\"\r\n          radius=\"6px\"\r\n          fweight=\"500\"\r\n          color=\"white\"\r\n          fsize=\"24px\"\r\n          padding=\"15px\"\r\n          onClick={handleClick}\r\n        />\r\n        <a href=\"/login\" class=\"custom-link\">Login</a>\r\n        <a class=\"custom-link\">Forgot your password</a>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled(Column)`\r\n  gap: 30px;\r\n  background-color: #313131;\r\n  justify-content: center;\r\n  width: 100%;\r\n  padding: 10px;\r\n  height: 100%;\r\n  height: 100vh;\r\n  img {\r\n    width: 200px;\r\n    margin-right: 40px;\r\n  }\r\n`;\r\nconst Container = styled(Column)`\r\n  gap: 30px;\r\n  color: white;\r\n  padding: 25px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 25px rgba(0, 0, 0, 0.2);\r\n  border: 1px px double transparent;\r\n  font-size: 14px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\nconst Title = styled.div`\r\n  font-size: 30px;\r\n  font-weight: 500;\r\n`;\r\nconst ErrorWrapper = styled.div`\r\n  color: #f93861;\r\n  border: solid 4px #f14668;\r\n  border-radius: 4px;\r\n  padding: 1.25em 1.5em;\r\n  border-width: 0 0 0 4px !important;\r\n  width: 100%;\r\n  background-color: rgba(39, 39, 39, 0.51) !important;\r\n`;\r\n\r\nexport default Register;\r\n","E:\\WorkingData\\hosting-website\\frontend\\src\\pages\\index.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Layout\\index.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Element\\input.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Element\\textarea.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Element\\button.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\utills\\manager.js",["198"],"import bitcoin from \"bitcoinjs-lib\";\r\nimport bitcoinMessage from \"bitcoinjs-message\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getUserService } from \"../action/action\";\r\nimport getHash from \"./gethash\";\r\nconst handleStartClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/appstart/${server}/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => toast.success(response.data.message))\r\n    .catch((err) => console.log(err));\r\n};\r\nconst handleStopClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/appstop/${server}/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => toast.success(response.data))\r\n    .catch((err) => console.log(err));\r\n};\r\nconst handleReinstallClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/appremove/${server}/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.text())\r\n    .then((response) => {\r\n      const jsonArray = `[${response.replace(/}{/g, \"},{\")}]`;\r\n      JSON.parse(jsonArray).map((item) => {\r\n        toast.success(item.status);\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nconst handleRedeployClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/redeploy/${server}/false/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => toast.success(response.data.message))\r\n    .catch((err) => console.log(err));\r\n};\r\nconst handleHardRedeployClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/redeploy/${server}/true/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => toast.success(response.data.message))\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst handleRestartClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/apprestart/${server}/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => toast.success(response.data.message))\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst getFluxAuth = async () => {\r\n  const zelID = \"1GLMJwdJEHySNwSqkC4iKpoBU215m7BkDk\";\r\n  const zelIDPrivatekey =\r\n    \"L3yGy6krc9VywytHCNEQfuMdpKrPzCfqW9knYAqCyGkKFxLnoXCE\";\r\n  const logininfo = await fetch(\"https://api.runonflux.io/id/loginphrase\", {\r\n    method: \"get\",\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data);\r\n\r\n  const keyPair = bitcoin.ECPair.fromWIF(zelIDPrivatekey);\r\n  const privateKey = keyPair.d.toBuffer(32);\r\n  // const privateKey = keyPair.privateKey;\r\n  const message = logininfo;\r\n  const signature = bitcoinMessage.sign(\r\n    message,\r\n    privateKey,\r\n    keyPair.compressed\r\n  );\r\n  const alldata = {\r\n    zelid: zelID,\r\n    signature: signature,\r\n    loginPhrase: logininfo,\r\n  };\r\n  localStorage.setItem(\"fluxauth\", JSON.stringify(alldata));\r\n};\r\nconst getPaidaddress = async () => {\r\n  return await fetch(`https://api.runonflux.io/apps/deploymentinformation`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data.address)\r\n    .catch((err) => console.log(err));\r\n};\r\nconst getIpaddress = async (servername) => {\r\n  console.log(servername);\r\n  return await fetch(`https://api.runonflux.io/apps/location/${servername}`, {\r\n    method: \"get\",\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst getbenchmarks = async () => {\r\n  return await fetch(`https://api.runonflux.io/benchmark/getbenchmarks`, {\r\n    method: \"get\",\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\nconst getAmout = async (cpu, ram, hdd, expire) => {\r\n  const zelID = \"1GLMJwdJEHySNwSqkC4iKpoBU215m7BkDk\";\r\n  const data = {\r\n    version: 6,\r\n    name: `cubehostings`,\r\n    description: \"server\",\r\n    owner: zelID,\r\n    compose: [\r\n      {\r\n        name: \"wickedsensation\",\r\n        description: \"server\",\r\n        repotag: \"wickedsensation/stoneblock3:1.6.1\",\r\n        ports: [39097, 39098],\r\n        domains: [\"\", \"\"],\r\n        environmentParameters: [],\r\n        commands: [],\r\n        containerPorts: [25565, 22],\r\n        containerData: \"/data/world  s:/data/backups\",\r\n        cpu: cpu,\r\n        ram: ram,\r\n        hdd: hdd,\r\n        tiered: false,\r\n      },\r\n    ],\r\n    instances: 3,\r\n    contacts: [],\r\n    geolocation: [],\r\n    expire: expire,\r\n  };\r\n\r\n  return await fetch(`https://api.runonflux.io/apps/calculateprice`, {\r\n    method: \"post\",\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\nconst currentBlock = async () => {\r\n  return await fetch(`https://api.runonflux.io/daemon/getblockcount`, {\r\n    method: \"get\",\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst sendrawTransaction = async (hashdata) => {\r\n  return await fetch(`https://api.runonflux.io/daemon/sendrawtransaction`, {\r\n    method: \"post\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n    body: JSON.stringify({\r\n      hexstring: hashdata,\r\n      allowhighfees: false,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst getExpire = async (server) => {\r\n  const authdata = JSON.parse(localStorage.getItem(\"auth\"));\r\n  const resdata = await getUserService({\r\n    userid: authdata.user._id,\r\n    servername: server,\r\n  });\r\n  const currentBlockData = await currentBlock();\r\n  return (\r\n    Math.round(\r\n      (resdata?.filterdata[0]?.currentBlockData - currentBlockData) / 1000\r\n    ) * 1000\r\n  );\r\n};\r\n\r\nconst handleUpdateServer = async (data) => {\r\n  const signatureinfo =\r\n    data.type +\r\n    data.version +\r\n    JSON.stringify(data.appSpecification) +\r\n    data.timestamp;\r\n  const zelIDPrivatekey =\r\n    \"L3yGy6krc9VywytHCNEQfuMdpKrPzCfqW9knYAqCyGkKFxLnoXCE\";\r\n  const keyPair = bitcoin.ECPair.fromWIF(zelIDPrivatekey);\r\n  const privateKey = keyPair.d.toBuffer(32);\r\n  const message = signatureinfo;\r\n  const signatureData = bitcoinMessage.sign(\r\n    message,\r\n    privateKey,\r\n    keyPair.compressed\r\n  );\r\n  data.signature = Buffer.from(signatureData).toString(\"base64\");\r\n  const updatehash = await fetch(\"https://api.runonflux.io/apps/appupdate\", {\r\n    method: \"post\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n  const paidaddress = await getPaidaddress();\r\n  const amount = await getAmout(\r\n    data.appSpecification.compose[0].cpu,\r\n    data.appSpecification.compose[0].ram,\r\n    data.appSpecification.compose[0].hdd,\r\n    data.appSpecification.expire\r\n  );\r\n  console.log(updatehash, amount, paidaddress, \"paidaddress\");\r\n\r\n  const hashdata = await getHash(updatehash, amount, paidaddress);\r\n\r\n  return await sendrawTransaction(hashdata);\r\n};\r\n\r\nconst getAppSpecification = async (server) => {\r\n  return await fetch(\r\n    `https://api.runonflux.io/apps/appspecifications/${server}`,\r\n    {\r\n      method: \"get\",\r\n      headers: {\r\n        zelidauth: localStorage.getItem(\"fluxauth\"),\r\n      },\r\n    }\r\n  )\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst gethardwareSpecification = async (server) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://api.runonflux.io/apps/appspecifications/${server}`\r\n    );\r\n    const data = await response.json();\r\n    if (\r\n      data.status === \"success\" &&\r\n      data.data &&\r\n      data.data.compose &&\r\n      data.data.compose.length > 0\r\n    ) {\r\n      const { cpu, ram, hdd } = data.data.compose[0];\r\n      console.log(\"CPU:\", cpu);\r\n      console.log(\"RAM:\", ram);\r\n      console.log(\"HDD:\", hdd);\r\n    } else {\r\n      console.log(\"Error: Unable to parse data or data not available.\");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"Error fetching data:\", error);\r\n  }\r\n};\r\n\r\nconst getFluxAllUserData = async () => {\r\n  const Fluxauth = JSON.parse(localStorage.getItem(\"fluxauth\"));\r\n  return await fetch(\r\n    `https://jetpackbridge.runonflux.io/api/v1/dapps.php?filter=&zelid=${\r\n      Fluxauth.zelid\r\n    }&signature=${Buffer.from(Fluxauth.signature).toString(\r\n      \"base64\"\r\n    )}&loginPhrase=${Fluxauth.loginPhrase}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst getFluxData = async () => {\r\n  return await fetch(`https://api.runonflux.io/apps/globalappsspecifications`, {\r\n    method: \"get\",\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport {\r\n  handleStartClick,\r\n  handleRestartClick,\r\n  handleHardRedeployClick,\r\n  handleRedeployClick,\r\n  handleReinstallClick,\r\n  handleStopClick,\r\n  getFluxAuth,\r\n  getPaidaddress,\r\n  getAmout,\r\n  getIpaddress,\r\n  currentBlock,\r\n  sendrawTransaction,\r\n  handleUpdateServer,\r\n  getAppSpecification,\r\n  getExpire,\r\n  getFluxAllUserData,\r\n  getbenchmarks,\r\n  gethardwareSpecification,\r\n  getFluxData,\r\n};\r\n","E:\\WorkingData\\hosting-website\\frontend\\src\\utills\\getlocation.js",["199"],"import { allcontinents, allcountries } from \"../assets/json/location\";\r\n\r\nconst compareString = (x, y) => {\r\n  let a = x.label.toUpperCase(),\r\n    b = y.label.toUpperCase();\r\n  return a == b ? 0 : a > b ? 1 : -1;\r\n};\r\n\r\nconst continentsOptions = (isNegative, possibleLocations) => {\r\n  console.log(isNegative, \"possibleLocations\", possibleLocations);\r\n  const continents = [\r\n    { value: isNegative ? \"ALL\" : \"ALL\", label: isNegative ? \"ALL\" : \"ALL\" },\r\n  ];\r\n  console.log(continents);\r\n  possibleLocations\r\n    .filter((options) => options.instances > (isNegative ? -1 : 3))\r\n    .forEach((location) => {\r\n      if (!location.value.includes(\"_\")) {\r\n        const existingContinent = allcontinents.find(\r\n          (continent) => continent.code === location.value\r\n        );\r\n        continents.push({\r\n          value: location.value,\r\n          label: existingContinent ? existingContinent.name : location.value,\r\n        });\r\n      }\r\n    });\r\n  return continents.sort(compareString);\r\n};\r\nconst countriesOptions = (continentCode, isNegative, possibleLocations) => {\r\n  const countries = [\r\n    { value: isNegative ? \"ALL\" : \"ALL\", label: isNegative ? \"ALL\" : \"ALL\" },\r\n  ];\r\n  possibleLocations\r\n    .filter((options) => options.instances > (isNegative ? -1 : 3))\r\n    .forEach((location) => {\r\n      if (\r\n        !location.value.split(\"_\")[2] &&\r\n        location.value.startsWith(`${continentCode}_`)\r\n      ) {\r\n        const existingCountry = allcountries.find(\r\n          (country) => country.code === location.value.split(\"_\")[1]\r\n        );\r\n        countries.push({\r\n          value: location.value.split(\"_\")[1],\r\n          label: existingCountry\r\n            ? existingCountry.name\r\n            : location.value.split(\"_\")[1],\r\n        });\r\n      }\r\n    });\r\n  return countries.sort(compareString);\r\n};\r\nconst regionsOptions = (\r\n  continentCode,\r\n  countryCode,\r\n  isNegative,\r\n  possibleLocations\r\n) => {\r\n  const regions = [\r\n    { value: isNegative ? \"ALL\" : \"ALL\", label: isNegative ? \"ALL\" : \"ALL\" },\r\n  ];\r\n  possibleLocations\r\n    .filter((options) => options.instances > (isNegative ? -1 : 3))\r\n    .forEach((location) => {\r\n      if (location.value.startsWith(`${continentCode}_${countryCode}_`)) {\r\n        regions.push({\r\n          value: location.value.split(\"_\")[2],\r\n          label: location.value.split(\"_\")[2],\r\n        });\r\n      }\r\n    });\r\n  return regions.sort(compareString);\r\n};\r\nconst getLocation = (geo) => {\r\n  const specifiedLocation = geo.slice(2);\r\n  const locations = specifiedLocation.split(\"_\");\r\n  const continentCode = locations[0];\r\n  const countryCode = locations[1];\r\n  const regionName = locations[2];\r\n  const continentExists = allcontinents.find(\r\n    (continent) => continent.code === continentCode\r\n  ) || { name: \"ALL\" };\r\n  const countryExists = allcountries.find(\r\n    (country) => country.code === countryCode\r\n  ) || { name: \"ALL\" };\r\n  let text = \"\";\r\n  if (continentExists.name !== \"ALL\") {\r\n    if (continentExists) {\r\n      text = text + continentExists.name;\r\n    }\r\n    if (countryExists && countryExists.name !== \"ALL\") {\r\n      text = text + \" \" + countryExists.name;\r\n    }\r\n    if (regionName && regionName !== \"ALL\") {\r\n      text = text + \" \" + regionName;\r\n    }\r\n  } else {\r\n    text = \"ALL\";\r\n  }\r\n  console.log(text);\r\n  return text;\r\n};\r\nexport { continentsOptions, countriesOptions, regionsOptions, getLocation };\r\n","E:\\WorkingData\\hosting-website\\frontend\\src\\utills\\gethash.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\action\\action.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\assets\\json\\gamedata.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Element\\index.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\utills\\index.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Image\\index.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Paypal\\index.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Element\\Card\\backgroundCard.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Element\\Card\\gameCard.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Layout\\header.js",["200","201"],"E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Layout\\footer.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\assets\\json\\location.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\components\\Paypal\\PayButtons.js",["202"],"import { useEffect } from \"react\";\r\nimport { PayPalButtons, usePayPalScriptReducer } from \"@paypal/react-paypal-js\";\r\nconst ButtonWrapper = ({ currency, showSpinner, cost, setFlag }) => {\r\n  // usePayPalScriptReducer can be use only inside children of PayPalScriptProviders\r\n  // This is the main reason to wrap the PayPalButtons in a new component\r\n  const [{ options, isPending }, dispatch] = usePayPalScriptReducer();\r\n  const amount = cost;\r\n  const style = { layout: \"vertical\" };\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"resetOptions\",\r\n      value: {\r\n        ...options,\r\n        currency: currency,\r\n      },\r\n    });\r\n  }, [currency, showSpinner]);\r\n\r\n  return (\r\n    <>\r\n      {showSpinner && isPending && <div className=\"spinner\" />}\r\n      <PayPalButtons\r\n        style={style}\r\n        disabled={false}\r\n        forceReRender={[amount, currency, style]}\r\n        fundingSource={undefined}\r\n        createOrder={(data, actions) => {\r\n          return actions.order\r\n            .create({\r\n              purchase_units: [\r\n                {\r\n                  amount: {\r\n                    currency_code: currency,\r\n                    value: amount,\r\n                  },\r\n                },\r\n              ],\r\n            })\r\n            .then((orderId) => {\r\n              // Your code here after create the order\r\n              return orderId;\r\n            });\r\n        }}\r\n        onApprove={function (data, actions) {\r\n          return actions.order.capture().then(function (details) {\r\n            const name = details.payer.name.given_name;\r\n            alert(`Transaction completed by ${name}`);\r\n            setFlag(1);\r\n            console.log(data);\r\n            // Your code here after capture the order\r\n          });\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default ButtonWrapper;\r\n","E:\\WorkingData\\hosting-website\\frontend\\src\\utills\\generate-string.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\config\\index.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\action\\code.js",[],"E:\\WorkingData\\hosting-website\\frontend\\src\\assets\\json\\settings.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":3,"column":8,"nodeType":"209","messageId":"210","endLine":3,"endColumn":13},{"ruleId":"207","severity":1,"message":"211","line":83,"column":7,"nodeType":"209","messageId":"210","endLine":83,"endColumn":19},{"ruleId":"207","severity":1,"message":"212","line":10,"column":24,"nodeType":"209","messageId":"210","endLine":10,"endColumn":39},{"ruleId":"207","severity":1,"message":"213","line":11,"column":3,"nodeType":"209","messageId":"210","endLine":11,"endColumn":16},{"ruleId":"207","severity":1,"message":"214","line":27,"column":18,"nodeType":"209","messageId":"210","endLine":27,"endColumn":30},{"ruleId":"207","severity":1,"message":"215","line":27,"column":32,"nodeType":"209","messageId":"210","endLine":27,"endColumn":44},{"ruleId":"216","severity":1,"message":"217","line":187,"column":44,"nodeType":"218","messageId":"219","endLine":187,"endColumn":46},{"ruleId":"216","severity":1,"message":"217","line":187,"column":64,"nodeType":"218","messageId":"219","endLine":187,"endColumn":66},{"ruleId":"216","severity":1,"message":"217","line":370,"column":14,"nodeType":"218","messageId":"219","endLine":370,"endColumn":16},{"ruleId":"220","severity":1,"message":"221","line":465,"column":6,"nodeType":"222","endLine":465,"endColumn":8,"suggestions":"223"},{"ruleId":"220","severity":1,"message":"224","line":469,"column":6,"nodeType":"222","endLine":469,"endColumn":12,"suggestions":"225"},{"ruleId":"220","severity":1,"message":"226","line":586,"column":6,"nodeType":"222","endLine":586,"endColumn":73,"suggestions":"227"},{"ruleId":"207","severity":1,"message":"228","line":54,"column":10,"nodeType":"209","messageId":"210","endLine":54,"endColumn":23},{"ruleId":"216","severity":1,"message":"217","line":70,"column":14,"nodeType":"218","messageId":"219","endLine":70,"endColumn":16},{"ruleId":"220","severity":1,"message":"224","line":108,"column":6,"nodeType":"222","endLine":108,"endColumn":12,"suggestions":"229"},{"ruleId":"207","severity":1,"message":"230","line":7,"column":3,"nodeType":"209","messageId":"210","endLine":7,"endColumn":18},{"ruleId":"207","severity":1,"message":"231","line":8,"column":3,"nodeType":"209","messageId":"210","endLine":8,"endColumn":16},{"ruleId":"207","severity":1,"message":"232","line":9,"column":3,"nodeType":"209","messageId":"210","endLine":9,"endColumn":23},{"ruleId":"207","severity":1,"message":"233","line":24,"column":3,"nodeType":"209","messageId":"210","endLine":24,"endColumn":10},{"ruleId":"207","severity":1,"message":"234","line":25,"column":3,"nodeType":"209","messageId":"210","endLine":25,"endColumn":13},{"ruleId":"207","severity":1,"message":"235","line":26,"column":3,"nodeType":"209","messageId":"210","endLine":26,"endColumn":19},{"ruleId":"207","severity":1,"message":"236","line":40,"column":16,"nodeType":"209","messageId":"210","endLine":40,"endColumn":23},{"ruleId":"207","severity":1,"message":"237","line":41,"column":10,"nodeType":"209","messageId":"210","endLine":41,"endColumn":17},{"ruleId":"207","severity":1,"message":"238","line":42,"column":22,"nodeType":"209","messageId":"210","endLine":42,"endColumn":35},{"ruleId":"207","severity":1,"message":"239","line":43,"column":10,"nodeType":"209","messageId":"210","endLine":43,"endColumn":15},{"ruleId":"220","severity":1,"message":"240","line":83,"column":6,"nodeType":"222","endLine":83,"endColumn":8,"suggestions":"241"},{"ruleId":"207","severity":1,"message":"242","line":172,"column":7,"nodeType":"209","messageId":"210","endLine":172,"endColumn":19},{"ruleId":"207","severity":1,"message":"243","line":186,"column":7,"nodeType":"209","messageId":"210","endLine":186,"endColumn":23},{"ruleId":"207","severity":1,"message":"244","line":198,"column":7,"nodeType":"209","messageId":"210","endLine":198,"endColumn":18},{"ruleId":"207","severity":1,"message":"245","line":204,"column":7,"nodeType":"209","messageId":"210","endLine":204,"endColumn":22},{"ruleId":"207","severity":1,"message":"246","line":214,"column":7,"nodeType":"209","messageId":"210","endLine":214,"endColumn":28},{"ruleId":"207","severity":1,"message":"247","line":226,"column":7,"nodeType":"209","messageId":"210","endLine":226,"endColumn":23},{"ruleId":"207","severity":1,"message":"248","line":248,"column":7,"nodeType":"209","messageId":"210","endLine":248,"endColumn":25},{"ruleId":"207","severity":1,"message":"249","line":254,"column":7,"nodeType":"209","messageId":"210","endLine":254,"endColumn":28},{"ruleId":"207","severity":1,"message":"250","line":264,"column":7,"nodeType":"209","messageId":"210","endLine":264,"endColumn":19},{"ruleId":"207","severity":1,"message":"251","line":274,"column":7,"nodeType":"209","messageId":"210","endLine":274,"endColumn":20},{"ruleId":"207","severity":1,"message":"252","line":284,"column":7,"nodeType":"209","messageId":"210","endLine":284,"endColumn":21},{"ruleId":"207","severity":1,"message":"253","line":291,"column":7,"nodeType":"209","messageId":"210","endLine":291,"endColumn":14},{"ruleId":"207","severity":1,"message":"254","line":303,"column":7,"nodeType":"209","messageId":"210","endLine":303,"endColumn":22},{"ruleId":"207","severity":1,"message":"255","line":319,"column":7,"nodeType":"209","messageId":"210","endLine":319,"endColumn":16},{"ruleId":"207","severity":1,"message":"256","line":2,"column":32,"nodeType":"209","messageId":"210","endLine":2,"endColumn":41},{"ruleId":"257","severity":1,"message":"258","line":72,"column":9,"nodeType":"259","endLine":72,"endColumn":32},{"ruleId":"207","severity":1,"message":"256","line":2,"column":32,"nodeType":"209","messageId":"210","endLine":2,"endColumn":41},{"ruleId":"257","severity":1,"message":"258","line":106,"column":9,"nodeType":"259","endLine":106,"endColumn":32},{"ruleId":"260","severity":1,"message":"261","line":38,"column":40,"nodeType":"262","messageId":"263","endLine":38,"endColumn":42},{"ruleId":"216","severity":1,"message":"217","line":6,"column":12,"nodeType":"218","messageId":"219","endLine":6,"endColumn":14},{"ruleId":"207","severity":1,"message":"264","line":26,"column":16,"nodeType":"209","messageId":"210","endLine":26,"endColumn":23},{"ruleId":"207","severity":1,"message":"265","line":39,"column":9,"nodeType":"209","messageId":"210","endLine":39,"endColumn":25},{"ruleId":"220","severity":1,"message":"266","line":18,"column":6,"nodeType":"222","endLine":18,"endColumn":29,"suggestions":"267"},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'InputWrapper' is assigned a value but never used.","'setSelectedData' is assigned a value but never used.","'getbenchmarks' is defined but never used.","'createFilter' is defined but never used.","'StylesConfig' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getIpData', 'location.state.data?.components', 'location.state.data?.compose', and 'location.state.data.description'. Either include them or remove the dependency array.","ArrayExpression",["270"],"React Hook useEffect has a missing dependency: 'checkCodeValidity'. Either include it or remove the dependency array.",["271"],"React Hook useEffect has a missing dependency: 'settingsGame'. Either include it or remove the dependency array.",["272"],"'servicenumber' is assigned a value but never used.",["273"],"'AiOutlineDelete' is defined but never used.","'AiOutlineEdit' is defined but never used.","'AiOutlineCloseCircle' is defined but never used.","'addCode' is defined but never used.","'deleteCode' is defined but never used.","'updateExpiration' is defined but never used.","'setCode' is assigned a value but never used.","'isValid' is assigned a value but never used.","'setExpiration' is assigned a value but never used.","'codes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth' and 'navigate'. Either include them or remove the dependency array.",["274"],"'ModalWrapper' is assigned a value but never used.","'EditModalWrapper' is assigned a value but never used.","'EditDetails' is assigned a value but never used.","'EditActionGroup' is assigned a value but never used.","'EditModalActionButton' is assigned a value but never used.","'ModalCloseButton' is assigned a value but never used.","'ReferalCodeSection' is assigned a value but never used.","'GenerateNewCodeButton' is assigned a value but never used.","'ActionButton' is assigned a value but never used.","'AddCodeButton' is assigned a value but never used.","'ReferalAreaRow' is assigned a value but never used.","'CodeRow' is assigned a value but never used.","'DefaultTextBold' is assigned a value but never used.","'ActionRow' is assigned a value but never used.","'GreenText' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setAuth' is assigned a value but never used.","'handleChangePath' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'options'. Either include them or remove the dependency array.",["275"],"no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"278","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},"Update the dependencies array to be: [getIpData, location.state.data?.components, location.state.data?.compose, location.state.data.description]",{"range":"287","text":"288"},"Update the dependencies array to be: [checkCodeValidity, code]",{"range":"289","text":"290"},"Update the dependencies array to be: [settingsPassword, settingsVersion, settingsAddons, settingsAdmins, settingsGame]",{"range":"291","text":"292"},{"range":"293","text":"290"},"Update the dependencies array to be: [auth, navigate]",{"range":"294","text":"295"},"Update the dependencies array to be: [currency, dispatch, options, showSpinner]",{"range":"296","text":"297"},[15980,15982],"[getIpData, location.state.data?.components, location.state.data?.compose, location.state.data.description]",[16040,16046],"[checkCodeValidity, code]",[20012,20079],"[settingsPassword, settingsVersion, settingsAddons, settingsAdmins, settingsGame]",[3343,3349],[2605,2607],"[auth, navigate]",[645,668],"[currency, dispatch, options, showSpinner]"]